name: Tests Python

on:
  push:
    branches: [ main ]
    paths:
      - 'Python/**'
      - 'Tests/python/**'
      - '.github/workflows/python-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Python/**'
      - 'Tests/python/**'
      - '.github/workflows/python-tests.yml'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Configuration de Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Installation des dépendances système (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-dev \
          python3-pip \
          python3-venv \
          python3-wheel \
          build-essential \
          libgl1-mesa-dev \
          libglib2.0-0 \
          libsm6 \
          libxrender1 \
          libxext6

    - name: Installation des dépendances système (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install \
          python \
          cairo \
          pango \
          pkg-config

    - name: Installation des dépendances Python
      run: |
        python -m pip install --upgrade pip
        pip install -r Python/requirements-dev.txt
        pip install -r Python/requirements.txt

    - name: Vérification de style avec flake8
      run: |
        pip install flake8
        flake8 Python/ Tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 Python/ Tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Tests avec pytest
      run: |
        pip install pytest pytest-cov
        pytest Tests/python/ -v --cov=Python --cov-report=xml

    - name: Envoi de la couverture à Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Vérification des types avec mypy
      run: |
        pip install mypy
        mypy Python/ Tests/python/ --ignore-missing-imports

    - name: Tests de performance
      run: |
        cd Tests/PerformanceTests
        python -m pytest test_simulation_perf.py -v --durations=0

    - name: Tests de la gestion de mémoire
      run: |
        cd Tests/PerformanceTests
        python -m pytest test_memory_usage.py -v --durations=0

    - name: Archivage des résultats de test
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}
        path: |
          .coverage
          coverage.xml
          test-reports/
          pytest-results/
